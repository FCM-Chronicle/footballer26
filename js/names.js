// names.js - 선수 이름 생성 시스템

// 국가별 성씨 (대폭 확장)
const SURNAMES = {
    korean: ["김", "이", "박", "최", "정", "강", "조", "윤", "장", "임", "한", "오", "서", "신", "권", "황", "안", "송", "류", "홍", "전", "고", "문", "양", "손", "배", "백", "허", "남", "심", "노", "하", "곽", "성", "차", "주", "우", "구", "나", "변"],
    japanese: ["다나카", "사토", "스즈키", "다카하시", "와타나베", "이토", "야마모토", "나카무라", "코바야시", "카토", "요시다", "야마다", "사사키", "야마구치", "마츠모토", "이노우에", "기무라", "하야시", "시미즈", "야마자키", "모리", "아베", "이케다", "하시모토", "야마시타", "이시카와", "나카지마", "마에다", "후지타", "오가와", "고토", "오카다", "하세가와", "무라카미", "콘도", "이시이", "사이토", "사카모토", "엔도", "아오키"],
    german: ["뮐러", "슈미트", "슈나이더", "피셔", "베버", "마이어", "바그너", "베커", "슐츠", "호프만", "코흐", "바우어", "리히터", "클라인", "볼프", "슈뢰더", "노이만", "슈바르츠", "짐머만", "브라운", "크뤼거", "하르트만", "랑에", "슈미츠", "크라우스", "뮐러", "레만", "후버", "마이어", "슐체", "발터", "쾨니히", "베르너", "슈바베", "지몬", "루트비히", "보헴", "융", "한", "슈스터"],
    spanish: ["가르시아", "로드리게스", "곤살레스", "페르난데스", "로페스", "마르티네스", "산체스", "페레스", "고메스", "마르틴", "히메네스", "루이스", "에르난데스", "디아스", "모레노", "무뇨스", "알바레스", "로메로", "알론소", "구티에레스", "나바로", "토레스", "도밍게스", "바스케스", "라모스", "힐", "세라노", "블랑코", "몰리나", "모랄레스", "수아레스", "오르테가", "델가도", "카스트로", "오르티스", "루비오", "마린", "사스", "로블레스", "누녜스"],
    english: ["스미스", "존스", "윌리엄스", "브라운", "테일러", "데이비스", "윌슨", "에반스", "토마스", "로버츠", "존슨", "워커", "라이트", "로빈슨", "톰슨", "화이트", "휴즈", "에드워즈", "그린", "홀", "우드", "해리스", "마틴", "잭슨", "클라크", "루이스", "리", "앨런", "스콧", "킹", "베이커", "애덤스", "힐", "미첼", "로버츠", "카터", "필립스", "에반스", "터너", "파커"],
    french: ["마르탱", "베르나르", "뒤부아", "토마", "로베르", "리샤르", "프티", "뒤랑", "르루아", "모로", "시몽", "로랑", "르페브르", "미셸", "가르시아", "다비드", "베르트랑", "루", "뱅상", "푸르니에", "지라르", "보네", "뒤퐁", "랑베르", "폰텐", "루소", "방상", "파브르", "슈발리에", "앙리", "게랭", "고티에", "가르니에", "페레", "페론", "보드", "앙드레", "메르시에", "블랑", "르메르"],
    italian: ["로시", "루소", "페라리", "에스포지토", "비안키", "로마노", "콜롬보", "리치", "마리노", "그레코", "브루노", "갈로", "콘티", "데 루카", "만치니", "코스타", "조르다노", "리초", "롬바르디", "모레티", "바르바리", "폰타나", "산티니", "마리니", "세라", "카루소", "페란테", "지안니", "도나티", "데 안젤리스", "코스타", "팔마", "레온", "로카", "카펠리", "발렌티", "산티", "살바토레", "오를란도", "피렐리"],
    dutch: ["더 용", "얀선", "더 프리스", "판 덴 베르흐", "판 데이크", "바커", "얀선", "피서", "스밋", "메이어", "더 부르", "물더", "더 흐로트", "보스", "포스", "페테르스", "헨드릭스", "판 레이우번", "데커", "브라우어", "반 데르 메이", "판 덴 호이벨", "쿠이퍼스", "판 리어", "메서", "판 호르", "더 비트", "호겐둡", "반 덴 헤이벨", "판 벨트", "스타인", "펠트만", "호스", "데이컨", "판 덴 브링크", "헤이스터스", "반 오스", "그룬", "부스", "판 다이크"],
    portuguese: ["실바", "산투스", "페레이라", "페레이라", "올리베이라", "코스타", "호드리게스", "마르틴스", "제수스", "소사", "페르난데스", "곤살베스", "고메스", "로페스", "마르케스", "알베스", "알메이다", "히베이루", "핀투", "카르발류", "테이세이라", "모레이라", "코레이아", "카르도소", "몬테이루", "라모스", "멘데스", "누네스", "소아레스", "레이스", "코엘류", "디아스", "비에이라", "네투", "바티스타", "세케이라", "두아르테", "바로스", "피레스", "마르케스"],
    turkish: ["을마즈", "카야", "데미르", "샤힌", "첼리크", "을드즈", "을드름", "외즈튀르크", "아이든", "외즈데미르", "아르슬란", "도안", "클츠", "아슬란", "체틴", "카라", "코치", "쿠르트", "외즈칸", "심셰크", "카라만", "코크", "아크순", "에르도안", "톱", "튀르크", "카라카야", "에르", "우날", "타스", "아이", "야만", "우슬루", "오즈", "소이살", "귈", "샤샨", "알튼", "바이람", "세르트"],
    serbian: ["요비치", "페트로비치", "니콜리치", "마르코비치", "조르제비치", "일리치", "파블로비치", "스토야노비치", "토도로비치", "미트로비치", "코바체비치", "시미치", "지브코비치", "포포비치", "스탄코비치", "밀로셰비치", "코스티치", "믈라데노비치", "라도비치", "디미트리예비치", "라디치", "크르스티치", "토미치", "밀리치", "욕시치", "보스코비치", "사비치", "비딕", "미르코비치", "스토시치", "탄코시치", "루키치", "포폰스키", "제코비치", "파니치", "보얀", "도키치", "블라디미르", "바샤", "토도르"],
    belgian: ["페테르스", "얀선스", "마스", "야콥스", "메르텐스", "빌렘스", "클라스", "후센스", "바우터스", "더 스메트", "헨드릭스", "판 담", "람베르트", "뒤부아", "로랑", "시몽", "클레이스", "페르뫼런", "스테븐스", "파우엘스", "반 댄 보슈", "더 브라우어", "데세", "르루아", "렘케", "페테르센", "웨버스", "반 호프", "케이스", "누이텐스", "위터", "얀센", "모에스", "크리스텐스", "구센스", "블롬", "프랭크", "쿠퍼스", "보흐스", "펠릭스"]
};

// 국가별 이름 (대폭 확장)
const FIRST_NAMES = {
    korean: ["민준", "서준", "도윤", "예준", "시우", "하준", "주원", "지호", "준서", "건우", "현우", "우진", "선우", "연우", "유준", "정우", "승우", "승현", "시윤", "준혁", "지훈", "민성", "진우", "재윤", "수호", "은우", "윤호", "태양", "민재", "시후", "지우", "승민", "재현", "성민", "찬우", "지환", "동현", "준영", "태준", "성준"],
    japanese: ["하루토", "유토", "소타", "하야토", "코타로", "유키", "쇼타", "렌", "료타", "다이키", "타쿠미", "료", "켄타", "카이토", "소라", "아야토", "히로토", "료스케", "다이치", "류세이", "켄신", "히나타", "유마", "시온", "아오이", "료헤이", "코헤이", "토와", "유세이", "리쿠", "쇼우마", "타이가", "하루키", "슌", "유우키", "토모야", "케이", "쇼헤이", "준", "타케루"],
    german: ["레온", "루카스", "팀", "파울", "요나스", "핀", "루이스", "막스", "펠릭스", "노아", "엘리아스", "벤", "루카", "톰", "모리츠", "얀", "니코", "다비드", "율리안", "지몬", "막시밀리안", "알렉산더", "토비아스", "니클라스", "패비안", "필립", "마르쿠스", "옌스", "슈테판", "안드레아스", "미하엘", "토마스", "크리스티안", "플로리안", "세바스티안", "다니엘", "마티아스", "베른트", "클라우스", "라이너"],
    spanish: ["파블로", "알레한드로", "다니엘", "알바로", "아드리안", "다비드", "마리오", "하비에르", "세르히오", "카를로스", "우고", "마누엘", "디에고", "라울", "이케르", "미겔", "마르코스", "안토니오", "페르난도", "로베르토", "엔리케", "루이스", "안드레스", "호르헤", "구스타보", "프란시스코", "이반", "루벤", "빅토르", "알폰소", "헤수스", "페드로", "호세", "산티아고", "라파엘", "펠리페", "니콜라스", "에두아르도", "가브리엘", "루카스"],
    english: ["잭", "올리버", "해리", "찰리", "토마스", "제임스", "조지", "윌리엄", "조슈아", "대니얼", "라이언", "벤", "새뮤얼", "루이스", "루크", "제이크", "코너", "매튜", "조", "칼럼", "아담", "네이선", "마크", "폴", "피터", "데이비드", "마이클", "앤드류", "리처드", "크리스토퍼", "스티븐", "케빈", "제이슨", "브라이언", "앤서니", "필립", "더글러스", "게리", "데렉", "로버트"],
    french: ["루카", "루이", "위고", "나탄", "톰", "아르튀르", "테오", "레오", "알렉상드르", "앙투안", "피에르", "막심", "니콜라", "줄리앙", "토마", "마티스", "바티스트", "클레망", "아드리앙", "라파엘", "가브리엘", "올리비에", "레미", "로랑", "파트릭", "미셸", "장", "필립", "프랑수아", "에티엔", "세드릭", "알렉시", "파비앙", "자크", "이브", "앙리", "제라르", "클로드", "뱅상", "다비드"],
    italian: ["마르코", "안드레아", "프란체스코", "알레산드로", "마테오", "로렌초", "가브리엘레", "루카", "다비데", "리카르도", "시모네", "페데리코", "톰마소", "조반니", "안토니오", "주세페", "스테파노", "로베르토", "파올로", "크리스티아노", "파비오", "클라우디오", "다니엘레", "미켈레", "니콜라", "비토", "지안루카", "레오나르도", "마우로", "발렌티노", "세르지오", "루이지", "카를로", "엔초", "필리포", "도메니코", "프란코", "에밀리오", "알베르토", "빈첸초"],
    dutch: ["단", "셈", "팀", "라르스", "테이스", "브람", "루크", "루벤", "제시", "스테인", "스벤", "케빈", "토마스", "막스", "야스퍼", "닉", "톰", "마이크", "릭", "요르디", "얀", "피터", "요리스", "바스", "비어", "렘코", "디르크", "마르텐", "플로리스", "율리안", "옌스", "지스", "카스퍼르", "요프", "데니스", "패트릭", "에릭", "프랑크", "피트", "코엔"],
    portuguese: ["주앙", "미겔", "프란시스쿠", "곤살루", "디오구", "페드루", "티아구", "라파엘", "안드레", "리카르두", "브루누", "루이", "누누", "카를루스", "마누엘", "우구", "베르나르두", "호드리구", "토마스", "마르팀", "구스타부", "페르난두", "이고르", "파울루", "빅토르", "다니엘", "후벵", "세르지우", "에두아르두", "조제", "마르쿠스", "파비우", "비투르", "후이", "알베르투", "마우리시우", "주제", "카이우", "레안드루", "펠리페"],
    turkish: ["메흐메트", "무스타파", "아흐메트", "알리", "하산", "휘세인", "이브라힘", "엠레", "부라크", "외메르", "에렌", "칸", "아르다", "에페", "메르트", "유수프", "베르카이", "오우즈", "칸", "오누르", "세르칸", "바리스", "타네르", "쿠드레트", "페브지", "일한", "야브즈", "톨가", "에네스", "우무트", "알페르", "오잔", "엠레", "지야", "타르크", "타이푼", "하칸", "케말", "오르한", "투르구트"],
    serbian: ["루카", "스테판", "니콜라", "마르코", "네마냐", "알렉산다르", "밀로시", "두샨", "필립", "페타르", "다닐로", "이반", "밀란", "블라드", "안드리야", "요반", "우로시", "보얀", "데얀", "파블레", "마테야", "블라디미르", "즐라탄", "사샤", "예카", "블라단", "닐로시", "보얀", "고란", "다르코", "미할로", "요시프", "드라간", "도브로슬라브", "보리슬라브", "밀로예", "라도반", "슬라비샤", "네나드", "베니아민"],
    belgian: ["루카", "루이", "나탄", "노아", "아르튀르", "빅토르", "쥘", "가브리엘", "마테오", "위고", "토마", "막심", "알렉상드르", "앙투안", "시몽", "니콜라", "줄리앙", "마티스", "리암", "아담", "옌스", "라르스", "브람", "루카스", "얀", "피터", "마르텐", "케빈", "요리스", "니스", "스테인", "로빈", "디에고", "라파엘", "다비드", "마티아스", "플로랑", "뱅상", "클로드", "필립"]
};

// 빅클럽 정의 (다국적 선수단)
const BIG_CLUBS = [
    "바이에른 뮌헨", "보루시아 도르트문트", "RB 라이프치히",
    "레알 마드리드", "바르셀로나", "아틀레티코 마드리드",
    "맨체스터 시티", "리버풀", "첼시", "아스널", "맨체스터 유나이티드", "토트넘 홋스퍼",
    "파리 생제르맹", "올랭피크 드 마르세유",
    "인테르", "밀란", "유벤투스", "나폴리",
    "아약스", "PSV 아인트호벤", "페예노르트",
    "FC 포르투", "SL 벤피카", "스포르팅 CP"
];

// 리그별 국가 매핑
const LEAGUE_NATIONALITY = {
    "K리그1": "korean",
    "J리그": "japanese",
    "독일 1부": "german",
    "독일 2부": "german",
    "스페인 1부": "spanish",
    "스페인 2부": "spanish",
    "잉글랜드 1부": "english",
    "잉글랜드 2부": "english",
    "프랑스 1부": "french",
    "이탈리아 1부": "italian",
    "에레디비지": "dutch",
    "포르투갈 리그": "portuguese",
    "터키 슈페르리가": "turkish",
    "세르비아 수페르리가": "serbian",
    "벨기에 프로 리그": "belgian"
};

// 모든 국적 풀 (빅클럽용)
const ALL_NATIONALITIES = ["korean", "japanese", "german", "spanish", "english", "french", "italian", "dutch", "portuguese", "turkish", "serbian", "belgian"];

// 랜덤 선수 이름 생성
function generatePlayerName(nationality) {
    const surnames = SURNAMES[nationality] || SURNAMES.english;
    const firstNames = FIRST_NAMES[nationality] || FIRST_NAMES.english;
    
    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];
    const surname = surnames[Math.floor(Math.random() * surnames.length)];
    
    // 모든 이름을 "이름 성" 형식으로 통일
    return `${firstName} ${surname}`;
}

// 팀 선수단 생성
function generateTeamSquad(teamName, leagueName) {
    const isBigClub = BIG_CLUBS.includes(teamName);
    const mainNationality = LEAGUE_NATIONALITY[leagueName] || "english";
    const squadSize = Math.floor(Math.random() * 7) + 16; // 16-22명
    
    const squad = [];
    
    for (let i = 0; i < squadSize; i++) {
        let nationality;
        
        if (isBigClub) {
            // 빅클럽: 30% 자국, 70% 다국적
            if (Math.random() < 0.3) {
                nationality = mainNationality;
            } else {
                nationality = ALL_NATIONALITIES[Math.floor(Math.random() * ALL_NATIONALITIES.length)];
            }
        } else {
            // 일반 팀: 70% 자국, 30% 외국인
            if (Math.random() < 0.7) {
                nationality = mainNationality;
            } else {
                nationality = ALL_NATIONALITIES[Math.floor(Math.random() * ALL_NATIONALITIES.length)];
            }
        }
        
        const name = generatePlayerName(nationality);
        const position = ["GK", "DF", "DF", "DF", "DF", "MF", "MF", "MF", "MF", "FW", "FW"][Math.floor(Math.random() * 11)];
        
        // 팀 전력에 기반한 선수 레벨
        const teamStrength = TEAM_STRENGTH[teamName] || 80;
        const variance = Math.floor(Math.random() * 20) - 10; // -10 ~ +10
        const level = Math.max(30, Math.min(250, teamStrength + variance));
        
        squad.push({
            name: name,
            position: position,
            level: level,
            nationality: nationality
        });
    }
    
    return squad;
}

// 전체 리그 선수단 초기화
function initializeAllSquads() {
    const allSquads = {};
    
    LEAGUES.leagues.forEach(league => {
        league.teams.forEach(team => {
            allSquads[team] = generateTeamSquad(team, league.name);
        });
    });
    
    return allSquads;
}

// 특정 팀의 랜덤 선수 가져오기
function getRandomTeamPlayer(teamName, excludePlayer = null) {
    if (!window.allSquads || !window.allSquads[teamName]) {
        return { name: "알 수 없는 선수", level: 70, position: "MF" };
    }
    
    const squad = window.allSquads[teamName];
    let availablePlayers = squad;
    
    if (excludePlayer) {
        availablePlayers = squad.filter(p => p.name !== excludePlayer.name);
    }
    
    if (availablePlayers.length === 0) return squad[0];
    
    return availablePlayers[Math.floor(Math.random() * availablePlayers.length)];
}

// 특정 포지션의 선수 가져오기
function getTeamPlayerByPosition(teamName, position) {
    if (!window.allSquads || !window.allSquads[teamName]) {
        return { name: "알 수 없는 선수", level: 70, position: position };
    }
    
    const squad = window.allSquads[teamName];
    const positionPlayers = squad.filter(p => p.position === position);
    
    if (positionPlayers.length === 0) {
        return getRandomTeamPlayer(teamName);
    }
    
    return positionPlayers[Math.floor(Math.random() * positionPlayers.length)];
}